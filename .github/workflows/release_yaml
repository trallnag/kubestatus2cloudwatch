name: Release

#
# Releases a new version of this project.
#
# Make sure to prepare project for a new release (see docs for more).
#

on:
  push:
    tags:
      - v*.*.*

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Task
        uses: arduino/setup-task@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install mdformat
        run: pip install mdformat

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: trallnag
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Determine release version
        run: |
          release_version=$(echo "${GITHUB_REF#refs/*/}" | cut -c 2-)
          echo "RELEASE_VERSION=$release_version" >> $GITHUB_ENV

      - name: Determine release name
        run: |
          release_name="${{ env.RELEASE_VERSION }} / $(date +%Y-%m-%d)"
          echo "RELEASE_NAME=$release_name" >> $GITHUB_ENV

      - name: Extract release notes
        run: task extract-notes

      - name: Build distribution
        run: task build-dist VERSION=${{ env.RELEASE_VERSION }}

      - name: Build & push images
        run: task build-buildx VERSION=${{ env.RELEASE_VERSION }} LATEST=true

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ env.RELEASE_NAME }}
          body_path: tmp/release.md
          draft: true
          files: |
            dist/sha256sums.txt
            dist/*.tar.gz
            dist/*.zip
