name: Release

#
# This workflow releases a new version of this project.
#
# Make sure to prepare the project for a new release (see docs for more).
#

on:
  push:
    tags:
      - v*.*.*

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Determine release-version
        id: release-version
        run: |
          value=$(echo "${GITHUB_REF#refs/*/}" | cut -c 2-)
          echo "value=$value" | tee -a $GITHUB_OUTPUT

      - name: Determine release-name
        id: release-name
        run: |
          value="${{ steps.release-version.outputs.value }} / $(date +%Y-%m-%d)"
          echo "value=$value" | tee -a $GITHUB_OUTPUT

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Set up Syft
        uses: anchore/sbom-action/download-syft@v0

      - name: Set up just
        uses: extractions/setup-just@v2

      - name: Install mdformat
        run: pipx install mdformat

      - name: Create release notes
        run: just create-release-notes

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: >-
            release
            --clean
            --release-notes=.tmp/release-notes.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_NAME: ${{ steps.release-name.outputs.value }}
          REGISTRY: ghcr.io
